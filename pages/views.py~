from django.shortcuts import render, redirect
import random 
from questions.models import Question
from django.contrib.auth.forms import UserCreationForm, AuthenticationForm
from django.contrib.auth import login, logout, authenticate
from django.contrib import messages
import _random


total_questions_mcq = 50
total_questions_db = Question.objects.count()
# Create your views here.
question = []

def home_view(request,*args, **kwargs):
	return render(request, "home.html", {})
	
def loggedin_view(request,*args, **kwargs):
	global question
	if len(question)==0:
		question.append(total_questions_mcq)
		for i in range(1, total_questions_mcq+1,1):
			question.append(random.randrange(1, total_questions_db+1, 1))
	print(len(question))

	return render(request, "loggedin.html", {'first': question[1]})

def questions_view(request, index=-1):	#if random function is used in url it always return 2
	global question
	print(question)
	if index == -1:
		index=random.randrange(1,total_questions_db+1,1)
	obj = Question.objects.get(id=question[index])
	context = {
		'object' : obj,
		'total_questions_mcq' : total_questions_mcq,
		'total_questions_db' : total_questions_db,
		'id_array': question,
		'index':index
	}

	return render(request,"questions.html",context);
	
def loggedout_view(request,*args, **kwargs):
	return render(request, "loggedout.html", {})

def register_view(request):
	if request.method == "POST":
		form = UserCreationForm(request.POST)
		if form.is_valid():
			user = form.save()
			username = form.cleaned_data.get('username')
			messages.success(request, f"New Account Created: {username}")
			login(request,user)
			messages.info(request, f"You are now logged in as: {username}")
			return redirect("loggedin")
		else:
			for msg in form.error_messages:
				messages.error(request, f"{msg}: {form.error_messages[msg]}")
				#print(form.error_messages[msg])
	form = UserCreationForm
	context = {
		"form":form
	}
	return render(request, "register.html", context)


def logout_request(request):
	logout(request)
	messages.info(request,"Bye!")
	return redirect("home")

def login_request(request):
	if request.method == "POST":
		form = AuthenticationForm(request,data=request.POST)
		if form.is_valid():
			username = form.cleaned_data.get('username')
			password = form.cleaned_data.get('password')
			user = authenticate(username=username, password=password)
			if user is not None:
				login(request, user)
				messages.info(request, f"You are now logged in as: {username}")
				return redirect("loggedin")
			else:
				messages.error(request, "Invalid username or password")
		else:
			messages.error(request, "Invalid username or password")
	form = AuthenticationForm()
	return render(request, "home.html",{"form":form})
